name: Java CI with Maven and Auto Tagging

on:
  push:
    branches: [ feat/atividade-ci-cd ]

jobs:
  CI:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Configure Environment Variables
      run: |
          sed -i 's#\${AZURE_STORAGE_CONNECTION_STRING}#'"${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}"'#g' src/main/resources/application.properties
          sed -i 's#\${AZURE_STORAGE_CONTAINER_NAME}#'"${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}"'#g' src/main/resources/application.properties
          sed -i 's#\${MONGO_PORT}#'"${{ secrets.MONGO_PORT }}"'#g' src/main/resources/application.properties
          sed -i 's#\${MONGO_HOST}#'"${{ secrets.AWS_MONGO_HOST }}"'#g' src/main/resources/application.properties
          sed -i 's#\${MONGO_DB}#'"${{ secrets.MONGO_DB }}"'#g' src/main/resources/application.properties
          sed -i 's#\${MONGO_USERNAME}#'"${{ secrets.MONGO_USERNAME }}"'#g' src/main/resources/application.properties
          sed -i 's#\${MONGO_PASSWORD}#'"${{ secrets.MONGO_PASSWORD }}"'#g' src/main/resources/application.properties
          sed -i 's#\${AZURE_STORAGE_URL}#'"${{ secrets.AZURE_STORAGE_URL }}"'#g' src/main/resources/application.properties

    - name: Display application.properties
      run: cat src/main/resources/application.properties

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run tests
      run: mvn -B test

    - name: Upload Artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: application
        path: target/*.jar

  Docker:
    runs-on: ubuntu-latest
    needs: [CI]
    steps: 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: diegosousa241104/educai-api:latest

  Deploy-AWS:
    needs: [CI]
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
          name: application
          path: target/
          
    - name: Deploy to AWS VM
      uses: appleboy/scp-action@v0.1.7
      with:
          host: ${{ secrets.AWS_VM_HOST }}
          username: ${{ secrets.AWS_VM_USERNAME }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_VM_PORT }}
          source: "target/*.jar"
          target: "/home/ubuntu/java-app"

    - name: Move Java App to Docker Container
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AWS_VM_HOST }}
        username: ${{ secrets.AWS_VM_USERNAME }}
        key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        port: ${{ secrets.AWS_VM_PORT }}
        script: |
          sh /home/ubuntu/deploy_backend.sh
